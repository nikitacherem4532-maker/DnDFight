// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
const rollBtn = document.getElementById("roll-btn");
const playerDiceContainer = document.getElementById("player-dice");
const enemyDiceContainer = document.getElementById("enemy-dice");
const playerScoreEl = document.getElementById("player-score");
const enemyScoreEl = document.getElementById("enemy-score");
const resultText = document.getElementById("result-text");
const winsEl = document.getElementById("wins");
const lossesEl = document.getElementById("losses");
const resetBtn = document.getElementById("reset-btn");

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∏–∑ localStorage
let wins = parseInt(localStorage.getItem("wins")) || 0;
let losses = parseInt(localStorage.getItem("losses")) || 0;

// –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—á—ë—Ç—á–∏–∫–∏
winsEl.textContent = wins;
lossesEl.textContent = losses;

// –§—É–Ω–∫—Ü–∏—è –±—Ä–æ—Å–∫–∞ –∫—É–±–æ–≤
function rollDice(numDice = 3) {
    const rolls = [];
    for (let i = 0; i < numDice; i++) {
        rolls.push(Math.floor(Math.random() * 6) + 1);
    }
    return rolls;
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫—É–±–æ–≤
function displayDice(container, rolls) {
    container.innerHTML = "";
    rolls.forEach(value => {
        const die = document.createElement("div");
        die.classList.add("die");
        die.textContent = value;
        container.appendChild(die);
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—è
rollBtn.addEventListener("click", () => {
    rollBtn.disabled = true;
    resultText.textContent = "üé≤ –ö—É–±—ã –ª–µ—Ç—è—Ç...";
    playerDiceContainer.innerHTML = "";
    enemyDiceContainer.innerHTML = "";

    setTimeout(() => {
        const playerRolls = rollDice();
        const enemyRolls = rollDice();

        displayDice(playerDiceContainer, playerRolls);
        displayDice(enemyDiceContainer, enemyRolls);

        const playerTotal = playerRolls.reduce((a, b) => a + b, 0);
        const enemyTotal = enemyRolls.reduce((a, b) => a + b, 0);

        playerScoreEl.textContent = playerTotal;
        enemyScoreEl.textContent = enemyTotal;

        if (playerTotal > enemyTotal) {
            resultText.textContent = "üèÜ –ü–æ–±–µ–¥–∞! –¢—ã —Å–æ–∫—Ä—É—à–∏–ª –º–æ–Ω—Å—Ç—Ä–∞!";
            resultText.style.color = "#ffd700";
            wins++;
        } else if (playerTotal < enemyTotal) {
            resultText.textContent = "üíÄ –ü–æ—Ä–∞–∂–µ–Ω–∏–µ... –ú–æ–Ω—Å—Ç—Ä –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ.";
            resultText.style.color = "#ff4a4a";
            losses++;
        } else {
            resultText.textContent = "ü§ù –ù–∏—á—å—è!";
            resultText.style.color = "#e0b94a";
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—á—ë—Ç—á–∏–∫–∏
        localStorage.setItem("wins", wins);
        localStorage.setItem("losses", losses);

        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        winsEl.textContent = wins;
        lossesEl.textContent = losses;

        rollBtn.disabled = false;
    }, 1000);
});

// –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞
resetBtn.addEventListener("click", () => {
    wins = 0;
    losses = 0;
    localStorage.setItem("wins", wins);
    localStorage.setItem("losses", losses);
    winsEl.textContent = wins;
    lossesEl.textContent = losses;
    resultText.textContent = "–°—á—ë—Ç—á–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã!";
    resultText.style.color = "#e0b94a";
});